import tkinter as tk
from tkinter import messagebox
from tkinter import simpledialog
import json

class МенеджерЗавдань:
    def __init__(self):
        self.завдання = []
        self.історія_виконаних = []
        self.історія_видалених = []
        self.завантажити_дані()

    def завантажити_дані(self):
        try:
            with open('завдання.json', 'r') as файл:
                дані = json.load(файл)
                self.завдання = дані.get('завдання', [])
                self.історія_виконаних = дані.get('історія_виконаних', [])
                self.історія_видалених = дані.get('історія_видалених', [])
        except FileNotFoundError:
            pass

    def зберегти_дані(self):
        with open('завдання.json', 'w') as файл:
            дані = {
                'завдання': self.завдання,
                'історія_виконаних': self.історія_виконаних,
                'історія_видалених': self.історія_видалених
            }
            json.dump(дані, файл)

    def додати_завдання(self, завдання):
        self.завдання.append(завдання)
        self.зберегти_дані()

    def позначити_як_виконане(self, індекс_завдання):
        виконане_завдання = self.завдання.pop(індекс_завдання)
        self.історія_виконаних.append(виконане_завдання)
        self.зберегти_дані()

    def видалити_завдання(self, індекс_завдання):
        видалене_завдання = self.завдання.pop(індекс_завдання)
        self.історія_видалених.append(видалене_завдання)
        self.зберегти_дані()

    def показати_історію_виконаних(self):
        return self.історія_виконаних[-10:]

    def показати_історію_видалених(self):
        return self.історія_видалених[-10:]

class ДодатокМенеджераЗавдань:
    def __init__(self, корінь):
        self.корінь = корінь
        self.корінь.title("Менеджер Завдань")
        self.менеджер_завдань = МенеджерЗавдань()

        self.додати_завдання_кнопка = tk.Button(корінь, text="Додати Завдання", command=self.додати_завдання)
        self.додати_завдання_кнопка.pack()

        self.позначити_виконаним_кнопка = tk.Button(корінь, text="Позначити як Виконане", command=self.позначити_виконаним)
        self.позначити_виконаним_кнопка.pack()

        self.видалити_завдання_кнопка = tk.Button(корінь, text="Видалити Завдання", command=self.видалити_завдання)
        self.видалити_завдання_кнопка.pack()

        self.показати_історію_виконаних_кнопка = tk.Button(корінь, text="Показати Історію Виконаних", command=self.показати_історію_виконаних)
        self.показати_історію_виконаних_кнопка.pack()

        self.показати_історію_видалених_кнопка = tk.Button(корінь, text="Показати Історію Видалених", command=self.показати_історію_видалених)
        self.показати_історію_видалених_кнопка.pack()

        self.оновити_завдання()

    def додати_завдання(self):
        завдання = simpledialog.askstring("Додати Завдання", "Введіть завдання:")
        if завдання:
            self.менеджер_завдань.додати_завдання(завдання)
            messagebox.showinfo("Успіх", "Завдання успішно додане.")
            self.оновити_завдання()

    def позначити_виконаним(self):
        if not self.менеджер_завдань.завдання:
            messagebox.showwarning("Увага", "Немає доступних завдань.")
            return

        індекс_завдання = simpledialog.askinteger("Позначити як Виконане", "Введіть номер завдання для позначення як виконане:")
        if індекс_завдання and 1 <= індекс_завдання <= len(self.менеджер_завдань.завдання):
            self.менеджер_завдань.позначити_як_виконане(індекс_завдання - 1)
            messagebox.showinfo("Успіх", "Завдання позначено як виконане.")
            self.оновити_завдання()
        else:
            messagebox.showwarning("Увага", "Недійсний номер завдання.")

    def видалити_завдання(self):
        if not self.менеджер_завдань.завдання:
            messagebox.showwarning("Увага", "Немає доступних завдань.")
            return

        індекс_завдання = simpledialog.askinteger("Видалити Завдання", "Введіть номер завдання для видалення:")
        if індекс_завдання and 1 <= індекс_завдання <= len(self.менеджер_завдань.завдання):
            self.менеджер_завдань.видалити_завдання(індекс_завдання - 1)
            messagebox.showinfo("Успіх", "Завдання успішно видалено.")
            self.оновити_завдання()
        else:
            messagebox.showwarning("Увага", "Недійсний номер завдання.")

    def показати_історію_виконаних(self):
        історія = self.менеджер_завдань.показати_історію_виконаних()
        if not історія:
            messagebox.showinfo("Історія Виконаних", "Немає виконаних завдань.")
        else:
            повідомлення = "\n".join(історія)
            messagebox.showinfo("Історія Виконаних", повідомлення)

    def показати_історію_видалених(self):
        історія = self.менеджер_завдань.показати_історію_видалених()
        if not історія:
            messagebox.showinfo("Історія Видалених", "Немає видалених завдань.")
        else:
            повідомлення = "\n".join(історія)
            messagebox.showinfo("Історія Видалених", повідомлення)

    def оновити_завдання(self):
        if hasattr(self, 'завдання_фрейм'):
            self.завдання_фрейм.destroy()

        self.завдання_фрейм = tk.Frame(self.корінь)
        self.завдання_фрейм.pack()

        for індекс, завдання in enumerate(self.менеджер_завдань.завдання):
            завдання_етикетка = tk.Label(self.завдання_фрейм, text=f"{індекс+1}. {завдання}")
            завдання_етикетка.pack()

def main():
    корінь = tk.Tk()
    додаток = ДодатокМенеджераЗавдань(корінь)
    корінь.mainloop()

if __name__ == "__main__":
    main()
